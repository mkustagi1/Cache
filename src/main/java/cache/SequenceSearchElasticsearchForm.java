package cache;

import cache.dataimportes.holders.ExperimentResult;
import cache.dataimportes.holders.SearchResult;
import cache.dataimportes.holders.Strand;
import cache.util.CursorToolkitOne;
import cache.util.TextTransfer;
import cache.workers.ExperimentTableWorker;
import cache.workers.SearchWorker;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.biojava3.core.sequence.DNASequence;
import org.biojava3.core.sequence.compound.NucleotideCompound;
import org.biojava3.core.sequence.views.ComplementSequenceView;
import org.biojava3.core.sequence.views.ReversedSequenceView;

/**
 *
 * @author Manjunath Kustagi
 */
public class SequenceSearchElasticsearchForm extends javax.swing.JPanel {

    protected TextTransfer tt = new TextTransfer();
    protected ExperimentTableWorker worker = new ExperimentTableWorker();
    String lastValue = "";

    /**
     * Creates new form SequenceSearchElasticsearchForm
     */
    public SequenceSearchElasticsearchForm() {
        initComponents();
        List<String> comboBoxItems = new ArrayList<>();
        jRadioButton2.setSelected(true);
        jSlider1.setEnabled(false);
        sequenceText.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                textChanged(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                textChanged(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sequenceText = new javax.swing.JTextArea();
        pasteButton = new javax.swing.JButton();
        reverseComplementCheckBox = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchReads = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        readCount = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        frReads = new javax.swing.JRadioButton();
        fReads = new javax.swing.JRadioButton();
        rReads = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        d0 = new javax.swing.JRadioButton();
        d1 = new javax.swing.JRadioButton();
        d2 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        experimentList = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchDb = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        publicDatabaseCount = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        frDb = new javax.swing.JRadioButton();
        fDb = new javax.swing.JRadioButton();
        rDb = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jScrollPane4 = new javax.swing.JScrollPane();
        dockingAlignmentDisplay1 = new cache.docking.javadocking.DockingAlignmentDisplay();

        setPreferredSize(new java.awt.Dimension(1024, 560));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(581, 557));

        jPanel1.setPreferredSize(new java.awt.Dimension(550, 510));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Paste Sequence:");

        sequenceText.setColumns(20);
        sequenceText.setLineWrap(true);
        sequenceText.setRows(5);
        jScrollPane1.setViewportView(sequenceText);

        pasteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cache/resources/edit-paste22.png"))); // NOI18N
        pasteButton.setFocusable(false);
        pasteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pasteButton.setMaximumSize(new java.awt.Dimension(25, 25));
        pasteButton.setMinimumSize(new java.awt.Dimension(25, 25));
        pasteButton.setPreferredSize(new java.awt.Dimension(25, 25));
        pasteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        pasteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteButtonActionPerformed(evt);
            }
        });

        reverseComplementCheckBox.setText("Transform to Reverse Complement");
        reverseComplementCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reverseComplementCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pasteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(reverseComplementCheckBox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(pasteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reverseComplementCheckBox)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Search Reads");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Experiment: ");

        searchReads.setText("Search Reads");
        searchReads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReadsActionPerformed(evt);
            }
        });

        jLabel9.setText("Limit Results to:");
        jLabel9.setToolTipText("maximum number of results");

        readCount.setText("100");

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setPreferredSize(new java.awt.Dimension(70, 57));

        buttonGroup1.add(frReads);
        frReads.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        frReads.setSelected(true);
        frReads.setText("F & R");
        frReads.setToolTipText("Both Strands");
        frReads.setMaximumSize(new java.awt.Dimension(55, 15));
        frReads.setMinimumSize(new java.awt.Dimension(55, 15));
        frReads.setPreferredSize(new java.awt.Dimension(55, 15));
        frReads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frReadsActionPerformed(evt);
            }
        });

        buttonGroup1.add(fReads);
        fReads.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        fReads.setText("F");
        fReads.setToolTipText("Forward Strand");
        fReads.setMaximumSize(new java.awt.Dimension(41, 15));
        fReads.setMinimumSize(new java.awt.Dimension(41, 15));
        fReads.setPreferredSize(new java.awt.Dimension(41, 15));
        fReads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fReadsActionPerformed(evt);
            }
        });

        buttonGroup1.add(rReads);
        rReads.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        rReads.setText("R");
        rReads.setToolTipText("Reverse Complement Strand");
        rReads.setMaximumSize(new java.awt.Dimension(41, 15));
        rReads.setMinimumSize(new java.awt.Dimension(41, 15));
        rReads.setPreferredSize(new java.awt.Dimension(41, 15));
        rReads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rReadsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frReads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fReads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rReads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(frReads, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(fReads, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rReads, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Distance:");

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup2.add(d0);
        d0.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        d0.setSelected(true);
        d0.setText("0");
        d0.setToolTipText("Both Strands");
        d0.setMaximumSize(new java.awt.Dimension(41, 15));
        d0.setMinimumSize(new java.awt.Dimension(41, 15));
        d0.setPreferredSize(new java.awt.Dimension(41, 15));
        d0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d0ActionPerformed(evt);
            }
        });

        buttonGroup2.add(d1);
        d1.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        d1.setText("1");
        d1.setToolTipText("Forward Strand");
        d1.setMaximumSize(new java.awt.Dimension(41, 15));
        d1.setMinimumSize(new java.awt.Dimension(41, 15));
        d1.setPreferredSize(new java.awt.Dimension(41, 15));
        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(d2);
        d2.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        d2.setText("2");
        d2.setToolTipText("Reverse Complement Strand");
        d2.setMaximumSize(new java.awt.Dimension(41, 15));
        d2.setMinimumSize(new java.awt.Dimension(41, 15));
        d2.setPreferredSize(new java.awt.Dimension(41, 15));
        d2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(d0, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(d0, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel5.setText("Length:");

        jSlider1.setMaximum(101);
        jSlider1.setMinimum(40);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(40);

        buttonGroup3.add(jRadioButton1);
        jRadioButton1.setText("Contiguous segment based match");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup3.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Edit distance based match");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jRadioButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4))
                    .addComponent(jRadioButton1)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10))
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        experimentList.setText("1");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(searchReads, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 195, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(117, 117, 117)
                                .addComponent(experimentList, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(readCount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(experimentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(readCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchReads)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel3);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(267, 260));

        jLabel1.setText("Search Curated Transcripts");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        searchDb.setText("Search Curated Transcripts");
        searchDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDbsearchDatabaseActionPerformed(evt);
            }
        });

        jLabel8.setText("Limit Results to:");
        jLabel8.setToolTipText("maximum number of results");

        publicDatabaseCount.setText("100");

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setPreferredSize(new java.awt.Dimension(70, 57));

        buttonGroup4.add(frDb);
        frDb.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        frDb.setSelected(true);
        frDb.setText("F & R");
        frDb.setToolTipText("Both Strands");
        frDb.setMaximumSize(new java.awt.Dimension(55, 15));
        frDb.setMinimumSize(new java.awt.Dimension(55, 15));
        frDb.setPreferredSize(new java.awt.Dimension(55, 15));
        frDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frDbActionPerformed(evt);
            }
        });

        buttonGroup4.add(fDb);
        fDb.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        fDb.setText("F");
        fDb.setToolTipText("Forward Strand");
        fDb.setMaximumSize(new java.awt.Dimension(41, 15));
        fDb.setMinimumSize(new java.awt.Dimension(41, 15));
        fDb.setPreferredSize(new java.awt.Dimension(41, 15));
        fDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fDbActionPerformed(evt);
            }
        });

        buttonGroup4.add(rDb);
        rDb.setFont(new java.awt.Font("Lucida Grande", 0, 8)); // NOI18N
        rDb.setText("R");
        rDb.setToolTipText("Reverse Complement Strand");
        rDb.setMaximumSize(new java.awt.Dimension(41, 15));
        rDb.setMinimumSize(new java.awt.Dimension(41, 15));
        rDb.setPreferredSize(new java.awt.Dimension(41, 15));
        rDb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rDbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frDb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fDb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rDb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(frDb, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(fDb, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rDb, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel11.setText("Contiguous segment based match");

        jLabel12.setText("Length:");

        jLabel13.setMaximumSize(new java.awt.Dimension(16, 16));
        jLabel13.setMinimumSize(new java.awt.Dimension(16, 16));
        jLabel13.setPreferredSize(new java.awt.Dimension(16, 16));
        jLabel13.setSize(new java.awt.Dimension(53, 16));

        jSlider2.setMaximum(250);
        jSlider2.setMinimum(40);
        jSlider2.setMinorTickSpacing(10);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);
        jSlider2.setSnapToTicks(true);
        jSlider2.setValue(40);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(publicDatabaseCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel11)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(searchDb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(publicDatabaseCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(searchDb)
                .addGap(53, 53, 53))
        );

        jScrollPane5.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        dockingAlignmentDisplay1.setPreferredSize(new java.awt.Dimension(200, 513));
        jScrollPane4.setViewportView(dockingAlignmentDisplay1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textChanged(DocumentEvent e) {
        int length = e.getDocument().getLength();
        if (length <= 250) {
            jSlider2.setMaximum(length);
            jSlider2.setMinimum(40);
        }
    }

    private void searchReadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReadsActionPerformed
        final JComponent comp = this;
        long expId = Long.parseLong((String) experimentList.getText());
        int readLength = jSlider1.getValue();
        int distance = 0;
        ExperimentResult result = worker.getExperiment(expId);
        if (result == null) {
            return;
        }
        if (jRadioButton2.isSelected()) {
            if (d0.isSelected()) {
                distance = 0;
            } else if (d1.isSelected()) {
                distance = 1;
            } else if (d2.isSelected()) {
                distance = 2;
            }
            readLength = Integer.parseInt(result.mappingParameters);
        } else if (jRadioButton1.isSelected()) {
            readLength = jSlider1.getValue();
            distance = 0;
        }
        Strand strand = Strand.BOTH;
        if (frReads.isSelected()) {
            strand = Strand.BOTH;
        } else if (fReads.isSelected()) {
            strand = Strand.FORWARD;
        } else if (rReads.isSelected()) {
            strand = Strand.REVERSECOMPLEMENT;
        }

        String sequence = sequenceText.getText();
        if (sequence != null) {
            sequence = sequence.replaceAll("\\s", "");
            sequence = sequence.replaceAll("(\\r|\\n)", "");
            sequence = sequence.replaceAll("\\r\\n", "");
            sequence = sequence.replaceAll("-", "");
            sequence = sequence.replaceAll("_", "");
            sequence = sequence.replaceAll("\\d+", "");
            sequence = sequence.toUpperCase();
            sequence = sequence.replaceAll("U", "T");
            final String seq = sequence;
            try {
                DNASequence dna = new DNASequence(seq);
            } catch (Error e) {
                sequenceText.setText("Sequence contains non DNA characters");
                return;
            }

            CursorToolkitOne.startWaitCursor(comp);
            searchReads.setEnabled(false);
            String rc = readCount.getText();
            int maxCount = 100;
            try {
                maxCount = Integer.parseInt(rc);
            } catch (Exception e) {
                readCount.setText(Integer.toString(100));
            }

            final SearchWorker worker1 = new SearchWorker(result.key, expId, distance, seq.trim(), maxCount, readLength, SearchResult.SearchType.READS, strand);

            SwingWorker<Boolean, Void> sWorker = new SwingWorker<Boolean, Void>() {
                @Override
                protected Boolean doInBackground() throws Exception {
                    worker1.loadSearchResults();
                    SearchResultPanel table = new SearchResultPanel();
                    table.setQuerySequence(seq);
                    table.setSearchWorker(worker1);
                    table.setPreferredSize(dockingAlignmentDisplay1.getSize());
                    int length = seq.length() < 10 ? seq.length() - 1 : 9;
                    String label = worker1.getExperimentId() + "_" + worker1.searchType + "_" + worker1.searchLength + "_" + worker1.maxCount + "_" + seq.substring(0, length) + "...";
                    dockingAlignmentDisplay1.addDisplay(label, table);
                    table.setVisible(true);
                    dockingAlignmentDisplay1.repaint();
                    return true;
                }

                @Override
                protected void done() {
                    dockingAlignmentDisplay1.repaint();
                    searchReads.setEnabled(true);
                    CursorToolkitOne.stopWaitCursor(comp);
                }

            };
            sWorker.execute();
        }
    }//GEN-LAST:event_searchReadsActionPerformed

    private void frReadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frReadsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frReadsActionPerformed

    private void fReadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fReadsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fReadsActionPerformed

    private void rReadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rReadsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rReadsActionPerformed

    private void pasteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteButtonActionPerformed
        sequenceText.setText(tt.getClipboardContents());
    }//GEN-LAST:event_pasteButtonActionPerformed

    private void reverseComplementCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reverseComplementCheckBoxActionPerformed
        String sequence = sequenceText.getText();
        if (sequence != null) {
            try {
                sequence = sequence.replaceAll("\\s", "");
                sequence = sequence.replaceAll("(\\r|\\n)", "");
                sequence = sequence.replaceAll("\\r\\n", "");
                sequence = sequence.replaceAll("-", "");
                sequence = sequence.replaceAll("_", "");
                sequence = sequence.replaceAll("\\d+", "");
                sequence = sequence.replaceAll("U", "T");
                sequence = sequence.replaceAll("u", "t");
                DNASequence seq = new DNASequence(sequence);
                org.biojava3.core.sequence.template.Sequence<NucleotideCompound> rc
                        = new ReversedSequenceView<>(
                                new ComplementSequenceView<>(seq));

                String revComp = rc.getSequenceAsString();
                sequenceText.setText(revComp);
            } catch (Error e) {
                sequenceText.setText("Sequence contains non DNA characters");
            }
        }
    }//GEN-LAST:event_reverseComplementCheckBoxActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton1.isSelected()) {
            d0.setEnabled(false);
            d1.setEnabled(false);
            d2.setEnabled(false);
            jSlider1.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void d2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d2ActionPerformed

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d1ActionPerformed

    private void d0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d0ActionPerformed

    private void rDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rDbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rDbActionPerformed

    private void fDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fDbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fDbActionPerformed

    private void frDbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frDbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frDbActionPerformed

    private void searchDbsearchDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDbsearchDatabaseActionPerformed
        final JComponent comp = this;
        int readLength = jSlider2.getValue();
        Strand strand = Strand.BOTH;
        if (frDb.isSelected()) {
            strand = Strand.BOTH;
        } else if (fDb.isSelected()) {
            strand = Strand.FORWARD;
        } else if (rDb.isSelected()) {
            strand = Strand.REVERSECOMPLEMENT;
        }

        String sequence = sequenceText.getText();
        if (sequence != null) {
            sequence = sequence.replaceAll("\\s", "");
            sequence = sequence.replaceAll("(\\r|\\n)", "");
            sequence = sequence.replaceAll("\\r\\n", "");
            sequence = sequence.replaceAll("-", "");
            sequence = sequence.replaceAll("_", "");
            sequence = sequence.replaceAll("\\d+", "");
            sequence = sequence.toUpperCase();
            sequence = sequence.replaceAll("U", "T");
            final String seq = sequence;
            try {
                DNASequence dna = new DNASequence(seq);
            } catch (Error e) {
                sequenceText.setText("Sequence contains non DNA characters");
                return;
            }

            CursorToolkitOne.startWaitCursor(comp);
            searchDb.setEnabled(false);
            String rc = publicDatabaseCount.getText();
            int maxCount = 100;
            try {
                maxCount = Integer.parseInt(rc);
            } catch (Exception e) {
                publicDatabaseCount.setText(Integer.toString(100));
            }

            SearchResult.SearchType st = SearchResult.SearchType.TRANSCRIPTS;
            final SearchWorker worker1 = new SearchWorker(1, 0l, 0, seq.trim(), maxCount, readLength, st, strand);

            SwingWorker<Boolean, Void> sWorker = new SwingWorker<Boolean, Void>() {
                @Override
                protected Boolean doInBackground() throws Exception {
                    worker1.loadSearchResults();
                    SearchResultPanel table = new SearchResultPanel();
                    table.setQuerySequence(seq);
                    table.setSearchWorker(worker1);
                    table.setPreferredSize(dockingAlignmentDisplay1.getSize());
                    int length = seq.length() < 10 ? seq.length() - 1 : 9;
                    String label = worker1.searchType + "_" + worker1.searchLength + "_" + worker1.maxCount + "_" + seq.substring(0, length) + "...";
                    dockingAlignmentDisplay1.addDisplay(label, table);
                    table.setVisible(true);
                    dockingAlignmentDisplay1.repaint();
                    return true;
                }

                @Override
                protected void done() {
                    dockingAlignmentDisplay1.repaint();
                    searchDb.setEnabled(true);
                    CursorToolkitOne.stopWaitCursor(comp);
                }

            };
            sWorker.execute();

        }
    }//GEN-LAST:event_searchDbsearchDatabaseActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (jRadioButton2.isSelected()) {
            d0.setEnabled(true);
            d1.setEnabled(true);
            d2.setEnabled(true);
            jSlider1.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JRadioButton d0;
    private javax.swing.JRadioButton d1;
    private javax.swing.JRadioButton d2;
    private cache.docking.javadocking.DockingAlignmentDisplay dockingAlignmentDisplay1;
    private javax.swing.JTextField experimentList;
    private javax.swing.JRadioButton fDb;
    private javax.swing.JRadioButton fReads;
    private javax.swing.JRadioButton frDb;
    private javax.swing.JRadioButton frReads;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JButton pasteButton;
    private javax.swing.JTextField publicDatabaseCount;
    private javax.swing.JRadioButton rDb;
    private javax.swing.JRadioButton rReads;
    private javax.swing.JTextField readCount;
    private javax.swing.JCheckBox reverseComplementCheckBox;
    private javax.swing.JButton searchDb;
    private javax.swing.JButton searchReads;
    private javax.swing.JTextArea sequenceText;
    // End of variables declaration//GEN-END:variables
}
